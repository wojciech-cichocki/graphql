type Query {
  login(data: LoginInput): String!
  me: User!
  users(query: String): [User!]!
  posts(query: String): [Post!]!
  comments: [Comment!]!
  post: Post!
}

type Mutation {
  createUser(data: CreateUserInput!): String!
  deleteUser(id: ID!): User!
  updateUser(id: ID!, data: UpdateUserInput!): User!
  createPost(data: CreatePostInput!): Post!
  createComment(data: CreateCommentInput!): Comment!
}

#type Subscription {
#  comment(postId: ID): Comment!
#}

input CreateUserInput {
  name: String!
  email: String!
  password: String!
}

input LoginInput {
  email: String!
  password: String!
}

input UpdateUserInput {
  name: String
  email: String
}

input CreatePostInput {
  title: String!
  body: String!
  author: ID!
}

input CreateCommentInput {
  text: String!
  author: ID!
  post: ID!
}

type User {
  id: ID!
  email: String!
  name: String!
  posts: [Post!]!
  comments: [Comment!]!
  sessions: [Session!]!
}

type Session {
  ip: String!
  client: String!
}

type Post {
  id: ID!
  title: String!
  body: String!
  author: User!
  comments: [Comment!]!
}

type Comment {
  id: ID!
  text: String!
  author: User!
  post: Post!
}
